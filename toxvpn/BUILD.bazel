load("@rules_cc//cc:defs.bzl", "cc_binary")

cc_binary(
    name = "toxvpn",
    srcs = [
        "import/src/control.cpp",
        "import/src/control.h",
        "import/src/epoll_target.h",
        "import/src/interface.cpp",
        "import/src/interface.h",
        "import/src/listener.cpp",
        "import/src/listener.h",
        "import/src/main.cpp",
        "import/src/main.h",
        "import/src/route.h",
    ] + select({
        "//tools/config:linux": [
            "import/src/interface_linux.cpp",
            "import/src/route_linux.cpp",
        ],
        "//tools/config:osx": [
            "import/src/interface_mac.cpp",
            "import/src/route_mac.cpp",
        ],
    }),
    copts = [
        "-fexceptions",  # toxvpn uses exceptions.
        "-frtti",  # json.hpp uses dynamic_cast.
        "'-DBOOTSTRAP_FILE=\"toxins/toxvpn/import/res/bootstrap.json\"'",
        "-DZMQ",
    ],
    tags = ["no-cross"],
    deps = [
        "//c-toxcore",
        "@json",
        "@libzmq",
    ] + select({
        "//tools/config:linux": ["@libcap"],
        "//conditions:default": [],
    }),
)

cc_binary(
    name = "toxvpn-remote",
    srcs = ["import/src/toxvpn-remote.cpp"],
    tags = ["no-cross"],
    deps = ["@libzmq"],
)

sh_test(
    name = "toxvpn_test",
    size = "small",
    srcs = [":toxvpn"],
    args = ["--help"],
    data = ["import/res/bootstrap.json"],
    tags = ["no-cross"],
)
